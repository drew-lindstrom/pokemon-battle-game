TODO List
- Test struggle in an actual game (makes sure struggle works against ghost types)
- Verify game over check works
- Implement stat modifiers
- Add moves that modify stats
- Add some common items
- Add some abilities to test
- Entry hazards
- Priority
- Import teams more easily

Weather:
- Clear Skies
- Harsh Sunlight
- Extremely Harsh Sunlight
- Rain
- Heavy Rain
- Sandstorm
- Hail
- Fog
- Strong Winds

Terrain:
- Electric Terrain
- Grassy Terrain
- Misty Terrain
- Psychic Terrain

Status effects:
- Poison
- Badly Poison
- Burn
- Paralysis
- Sleep
- Frozen

Volatile Status:
These will end when a pokemon switches out or after a number of turns.
- Bound
- Can't escape
- Confusion
- Curse
- Embargo
- Encore (also for choice items)
- Flinch
- Heal Block
- Identified
- Infatuation
- Leech Seed
- Nightmare
- Perish Song
- Taunted
- Telekinesis
- Tormet
- Aqua Ring
- Bracing
- Charging turn
- Center of Attention
- Defense Curl
- Rooting
- Magic Coat
- Magnetic Levitation
- Mimic
- Minimize
- Protection
- Recharging
- Semi-invulnerable turn
- Substitute
- Taking aim
- Transformed
- Withdrawing

Implement turn sequence and end turn sequence

Plan for move effects.
- Create status conditions and volatile status conditions functions
- Create general effect functions (heal, raise stat, etc.)
- dictionary that has each effect/condition function with move names as their values. Ie {'heal': [['Soft Boiled', 50], [Moonlight, 50, 25 (if daytime]}
- How would this work with ablities and items that nullfiy move effects?
  - Could use dictionary to signafy when a funciton needs to be called and then ahve conditional statements inside the functions for each speciic move.

- Need to run through some example fights to see what the structure is like for applying move effects, abilities, and item effects.
  - Should be attack first, 

- Add asserts and unit test to existing functions.
- Random testing.